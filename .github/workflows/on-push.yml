name: On Push

on:
  push:
    branches:
      - main
      - staging
      - production


jobs:
  get-commit-list:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Get JIRA Ticket ID List
        run: |
          TICKET_IDS=()
          JOINED_TICKET_IDS=()

          git fetch origin ${{ github.base_ref }}
          echo "---base_branch fetch Done---"
          git fetch origin ${{ github.head_ref }}
          echo "---pr_branch fetch Done---"

          base_branch="${{ github.base_ref }}"
          pr_branch="${{ github.head_ref }}"
          echo "base_branch=$base_branch"
          echo "pr_branch=$pr_branch"

          # PR에 올라온 모든 commit history의 message를 확인해 지라 티켓 ID를 추출합니다.
          commit_messages=$(git log --pretty=format:"%s" origin/"$base_branch"..origin/"$pr_branch")
          IFS=$'\n'
          for line in $commit_messages; do
            if [[ "$line" =~ AAA-[0-9]+ ]]; then
              ticket_id="${BASH_REMATCH[0]}"
              TICKET_IDS+=("$ticket_id")
            fi
          done

          # 쉼표를 추가하여 새 배열에 추가, 마지막은 제외
          for ((i = 0; i < ${#TICKET_IDS[@]}; i++)); do
            if [ $i -eq $((${#TICKET_IDS[@]} - 1)) ]; then
              JOINED_TICKET_IDS+=("${TICKET_IDS[i]}")
            else
              JOINED_TICKET_IDS+=("${TICKET_IDS[i]},")
            fi
          done

          echo "-----For done----"

          # 추출된 모든 티켓 ID들을 출력합니다.
          echo "----JIRA Ticket ID List----"
          for ticket_id in "${JOINED_TICKET_IDS[@]}"; do
            echo "Found ticket ID: $ticket_id"
          done

